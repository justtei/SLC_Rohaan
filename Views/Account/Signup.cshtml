@model SLC_Rohaan.Models.Signup

@{
}


    @using (Html.BeginForm()) 
    {
        @Html.AntiForgeryToken()
        
<div class="form-horizontal">
    <h4>Signup</h4>
    <hr />
    <span style="color:red;">@ViewBag.Msg</span>
    <div class="row">
        <div class="col-md-6">
            @Html.LabelFor(model => model.idx, htmlAttributes: new { @class = "control-label" })

            @Html.EditorFor(model => model.idx, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.idx, "", new { @class = "text-danger" })

        </div>

        <div class="col-md-6">
            @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-2" })
            @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="row">
        <div class="col-md-6">
            @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-2" })
                @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
            </div>

        <div class="col-md-6">
            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="row">
        <div class="col-md-6">
            @Html.LabelFor(model => model.IsAdmin, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="checkbox">
                @Html.EditorFor(model => model.IsAdmin)
                @Html.ValidationMessageFor(model => model.IsAdmin, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="col-md-6">
            @Html.LabelFor(model => model.IsPublisher, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="checkbox">
                @Html.EditorFor(model => model.IsPublisher)
                @Html.ValidationMessageFor(model => model.IsPublisher, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-md-6">
            @Html.LabelFor(model => model.IsAuthor, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="checkbox">
                    @Html.EditorFor(model => model.IsAuthor)
                    @Html.ValidationMessageFor(model => model.IsAuthor, "", new { @class = "text-danger" })
                </div>
        </div>
        <div class="col-md-6">
            @Html.LabelFor(model => model.IsIlist, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="checkbox">
                    @Html.EditorFor(model => model.IsIlist)
                    @Html.ValidationMessageFor(model => model.IsIlist, "", new { @class = "text-danger" })
                </div>
        </div>
    </div>
    <div class="row">
        <div class="col-md-6">
            @Html.LabelFor(model => model.IsActive, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="checkbox">
                    @Html.EditorFor(model => model.IsActive)
                    @Html.ValidationMessageFor(model => model.IsActive, "", new { @class = "text-danger" })
                </div>
        </div>
        <div class="col-md-6">
            @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-2" })
                @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control", type = "password" } })
                @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
        </div>
    </div>
        <div class="">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
        </div>
    </div>
    }
